<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Debug frame</title>
    <style>
        html {
            background: #282828;
        }
        #debug-console-title {
            font-family: monospace;
            font-size: 120%;
            font-weight: bold;
            color: #eeeae0;
        }

        .debug-log {
            font-family: monospace;
            font-size: 87.5%;
            background: #282828;
            color: #eeeae0;
            border-bottom: 1px solid #525252;
            padding: 0.25rem;
            margin: 0;
            display: block;
            white-space: pre-wrap;
        }
        .debug-log-warn {
            background: #413A2A;
            color: #EE9836;
        }
        .debug-log-error {
            background: #4E3534;
            color: #E46962;
        }

        .debug-log-item {
            display: inline-block;
        }
    </style>
</head>
<body>
    <div id="debug-console-title">
        Console:
    </div>
    <div id="debug-logs"></div>
    <script id="utils">
        window.debugUtils = {
            'ImageLog': function(width, height, data) {
                this.width = width
                this.height = height
                this.data = data
            }
        }
        ;(() => {
            const originalConsoleLog = console.log
            const originalConsoleWarn = console.warn
            const originalConsoleError = console.error
            console.log = function() {
                debugLog('log', ...arguments)
                originalConsoleLog.apply(console, arguments)
            }
            console.warn = function() {
                debugLog('warn', ...arguments)
                originalConsoleWarn.apply(console, arguments)
            }
            console.error = function() {
                debugLog('error', ...arguments)
                originalConsoleError.apply(console, arguments)
            }
            let onNextMessage = null

            function debugLog(severity, ...args) {
                const wrapper = document.createElement('div')
                wrapper.classList.add('debug-log')
                wrapper.classList.add('debug-log-' + severity)
                if (onNextMessage) {
                    onNextMessage(args)
                    onNextMessage = null
                    return
                }
                const message = args.map(arg => {
                    const item = document.createElement('span')
                    item.classList.add('debug-log-item')
                    if (typeof arg === 'object') {
                        if (arg instanceof window.debugUtils.ImageLog) {
                            const canvas = getImageCanvas(arg)
                            item.appendChild(canvas)
                        } else {
                            item.innerText = arg?.toString()
                        }
                    } else {
                        item.innerText = arg
                    }
                    return item
                })

                message.forEach(item => wrapper.appendChild(item))

                document.getElementById('debug-logs').appendChild(wrapper)
            }

            function getImageCanvas(imageLog) {
                const canvas = document.createElement('canvas')
                const ctx = canvas.getContext('2d')
                canvas.width = imageLog.width
                canvas.height = imageLog.height
                ctx.putImageData(new ImageData(Uint8ClampedArray.from(imageLog.data), imageLog.width, imageLog.height), 0, 0)
                return canvas
            }
        })()
    </script>

    <script src="<%= objectUrl %>"></script>
    <script>
        <%= entryPoint %>()
    </script>
</body>
</html>